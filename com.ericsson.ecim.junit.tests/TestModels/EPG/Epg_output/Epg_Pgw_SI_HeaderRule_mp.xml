<?xml version="1.0" encoding="UTF-8"?><!--
	Copyright (c) 2013 Ericsson AB. 
	All rights reserved 

	DX ECIM Tool-chain generated this file on 2013-apr-16 17:35:25 using:
	* com.ericsson.ecim.m2m 2.6.3.qualifier
	* com.ericsson.ecim.dsl 2.6.3.qualifier
	* com.ericsson.ecim.edm 2.6.3.qualifier
--><!DOCTYPE models SYSTEM "mp.dtd">
<models>
    <dtdVersion>F</dtdVersion>
    <momMetaData>
        <momTitle>EPG model</momTitle>
        <momSubTitle>EPG node</momSubTitle>
        <momIdentity>
            <docNum>0</docNum>
            <docLang>English</docLang>
            <docRev>0.1</docRev>
            <docDate>date</docDate>
        </momIdentity>
        <createdBy>
            <signature>ervxipe2</signature>
        </createdBy>
        <approvedBy>
            <signature>ervxipe2</signature>
        </approvedBy>
    </momMetaData>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <mim author="ervxipe2" contact="ervxipe2" date="" docNo="" name="Epg_Pgw_SI_HeaderRule" namespace="urn:com:ericsson:ecim:Epg_Pgw_SI_HeaderRule" namespacePrefix="epg_pgw_si_headerrule" organization="Ericsson EAB, NDO EPG" release="2" revision="" version="3">
        <description>Header rule</description>
        <derivedDataType name="RangedU32">
            <description>Ranged Unit 0 .. 4294967295</description>
            <baseType>
                <uint32>
                    <range>
                        <min>0</min>
                        <max>4294967295</max>
                    </range>
                </uint32>
            </baseType>
        </derivedDataType>
        <derivedDataType name="IpAddressRange">
            <description>IP Address range</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>4</min>
                        <max>49</max>
                    </lengthRange>
                    <validValues>^[\ ]*((([A-Fa-f0-9]{1,4}:){7}([A-Fa-f0-9]{1,4}|:))|(([A-Fa-f0-9]{1,4}:){6}(:[A-Fa-f0-9]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([A-Fa-f0-9]{1,4}:){5}(((:[A-Fa-f0-9]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([A-Fa-f0-9]{1,4}:){4}(((:[A-Fa-f0-9]{1,4}){1,3})|((:[A-Fa-f0-9]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([A-Fa-f0-9]{1,4}:){3}(((:[A-Fa-f0-9]{1,4}){1,4})|((:[A-Fa-f0-9]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([A-Fa-f0-9]{1,4}:){2}(((:[A-Fa-f0-9]{1,4}){1,5})|((:[A-Fa-f0-9]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([A-Fa-f0-9]{1,4}:){1}(((:[A-Fa-f0-9]{1,4}){1,6})|((:[A-Fa-f0-9]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[A-Fa-f0-9]{1,4}){1,7})|((:[A-Fa-f0-9]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))/([1-9]?[0-9]|1[0-1][0-9]|12[0-8])[\ ]*$|(^(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])/[0-9]{1,})$</validValues>
                </string>
            </baseType>
        </derivedDataType>
        <derivedDataType name="SingletonNodeName">
            <description>Type of single node name, has to be equal to 1</description>
            <domainExtension domain="ECIM">
                <extension name="originatingMimVersion" value="2"/>
                <extension name="originatingMimName" value="Epg_epg"/>
                <extension name="originatingMimRelease" value="1"/>
            </domainExtension>
            <baseType>
                <string>
                    <validValues>^1$</validValues>
                </string>
            </baseType>
        </derivedDataType>
        <derivedDataType name="PriorityKey">
            <description>String containing only decimal digits.&#13;
First digit cannot be zero, range is 1-999999.&#13;
</description>
            <domainExtension domain="ECIM">
                <extension name="originatingMimVersion" value="2"/>
                <extension name="originatingMimName" value="Epg_epg"/>
                <extension name="originatingMimRelease" value="1"/>
            </domainExtension>
            <baseType>
                <string>
                    <lengthRange>
                        <min>1</min>
                        <max>6</max>
                    </lengthRange>
                    <validValues>^[1-9][0-9]*$</validValues>
                </string>
            </baseType>
        </derivedDataType>
        <derivedDataType name="EcimEmpty">
            <description>The empty built-in type represents a leaf that does not have any value, it conveys information by its presence or absence.</description>
            <domainExtension domain="ECIM">
                <extension name="originatingMimVersion" value="1"/>
                <extension name="originatingMimName" value="ECIM_CommonLibrary"/>
                <extension name="originatingMimRelease" value="0"/>
            </domainExtension>
            <baseType>
                <boolean/>
            </baseType>
        </derivedDataType>
        <derivedDataType name="Port">
            <description>Match MS port</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>1</min>
                        <max>63</max>
                    </lengthRange>
                    <validValues>^(ftp-data|ftp|ssh|telnet|smtp|tacacs|tacacs-ds|domain|dhcp|bootps|bootpc|tftp|finger|http|kerberos-sec|pop3|sunrpc|ident|nntp|ntp|netbios-ns|netbios-dgm|netbios-ssn|imap|snmp|snmptrap|xdmcp|bgp|ldap|mobileip-agent|mobilip-nm|msdp|https|snpp|biff|exec|login|who|cmd|syslog|printer|talk|ntalk|rip|timed|klogin|kshell|ldp|krb-prop|krbupdate|kpasswd|socks|afs|pptp|radius|radacct|nfsd|eklogin|ekshell|rkinit|cvspserver|wap-wsp|wap-wtp-wsp|[0-9-]+)$</validValues>
                </string>
            </baseType>
        </derivedDataType>
        <derivedDataType name="IpAddress">
            <description>IP Address</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>2</min>
                        <max>45</max>
                    </lengthRange>
                    <validValues>^[\ ]*(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(((([A-Fa-f0-9]{1,4}:){7}([A-Fa-f0-9]{1,4}|:))|(([A-Fa-f0-9]{1,4}:){6}(:[A-Fa-f0-9]{1,4}|((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([A-Fa-f0-9]{1,4}:){5}(((:[A-Fa-f0-9]{1,4}){1,2})|:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3})|:))|(([A-Fa-f0-9]{1,4}:){4}(((:[A-Fa-f0-9]{1,4}){1,3})|((:[A-Fa-f0-9]{1,4})?:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([A-Fa-f0-9]{1,4}:){3}(((:[A-Fa-f0-9]{1,4}){1,4})|((:[A-Fa-f0-9]{1,4}){0,2}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([A-Fa-f0-9]{1,4}:){2}(((:[A-Fa-f0-9]{1,4}){1,5})|((:[A-Fa-f0-9]{1,4}){0,3}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(([A-Fa-f0-9]{1,4}:)(((:[A-Fa-f0-9]{1,4}){1,6})|((:[A-Fa-f0-9]{1,4}){0,4}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:))|(:(((:[A-Fa-f0-9]{1,4}){1,7})|((:[A-Fa-f0-9]{1,4}){0,5}:((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}))|:)))))[\ ]*$</validValues>
                </string>
            </baseType>
        </derivedDataType>
        <derivedDataType name="RangedString62">
            <description>string up to 62 tokens</description>
            <baseType>
                <string>
                    <validValues>^[A-Za-z0-9][_0-9A-Za-z-]{0,62}$</validValues>
                </string>
            </baseType>
        </derivedDataType>
        <derivedDataType name="RuleName">
            <description>Must be a string beginning with a number or letter and consisting of letters, numbers, dashes and underscores.</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>1</min>
                        <max>63</max>
                    </lengthRange>
                    <validValues>^[[:alnum:]][[:alnum:]_-]*$</validValues>
                </string>
            </baseType>
        </derivedDataType>
        <derivedDataType name="Number">
            <description>protocol number</description>
            <baseType>
                <uint8>
                    <range>
                        <min>1</min>
                        <max>255</max>
                    </range>
                </uint8>
            </baseType>
        </derivedDataType>
        <class name="HeaderRule">
            <description>Header rule</description>
            <root/>
            <dependenciesScript><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
    <pattern>
        <rule>
            <assert id='set' test='exists(./Term/@termID)'><name path='.'/>: Missing mandatory managed object 'term'</assert>
        </rule>
    </pattern>
</schema>]]></dependenciesScript>
            <attribute name="headerRuleId">
                <description>Rule name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="RuleName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="Term">
            <description>Define a service identification term</description>
            <dependenciesScript><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
    <pattern>
        <rule>
            <assert id='set' test='exists(./Then/@thenID)'><name path='.'/>: Missing mandatory managed object 'then'</assert>
        </rule>
    </pattern>
</schema>]]></dependenciesScript>
            <attribute name="termID">
                <description>Identifier of the term.&#13;
Determines the term priority based on lexical order.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="PriorityKey">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="name">
                <description>Term name</description>
                <mandatory/>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RuleName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="From">
            <description>Define match criteria</description>
            <attribute name="fromID">
                <description>Single instance node must have '1' as name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="SingletonNodeName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="msPrefix">
                <description>Match MS prefix</description>
                <noNotification/>
                <dataType>
                    <sequence>
                        <derivedDataTypeRef name="IpAddressRange">
                            <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                        </derivedDataTypeRef>
                        <minLength>0</minLength>
                        <maxLength>10</maxLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="msAddress">
                <description>Match MS address</description>
                <noNotification/>
                <dataType>
                    <sequence>
                        <derivedDataTypeRef name="IpAddress">
                            <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                        </derivedDataTypeRef>
                        <minLength>0</minLength>
                        <maxLength>10</maxLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="networkPrefix">
                <description>Match network prefix</description>
                <noNotification/>
                <dataType>
                    <sequence>
                        <derivedDataTypeRef name="IpAddressRange">
                            <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                        </derivedDataTypeRef>
                        <minLength>0</minLength>
                        <maxLength>10</maxLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="networkAddress">
                <description>Match network address</description>
                <noNotification/>
                <dataType>
                    <sequence>
                        <derivedDataTypeRef name="IpAddress">
                            <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                        </derivedDataTypeRef>
                        <minLength>0</minLength>
                        <maxLength>10</maxLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="networkPort">
                <description>Match network port

Values: ftp-data | ftp | ssh | telnet | smtp | tacacs | tacacs-ds | domain | dhcp | bootps | bootpc | tftp | finger | http | kerberos-sec | pop3 | sunrpc | ident | nntp | ntp | netbios-ns | netbios-dgm | netbios-ssn | imap | snmp  snmptrap | xdmcp | bgp | ldap | mobileip-agent | mobilip-nm | msdp | https | snpp | biff | exec | login | who | cmd | syslog | printer | talk | ntalk | rip | timed | klogin | kshell | ldp | krb-prop | krbupdate | kpasswd | socks | afs | pptp | radius | radacct | nfsd | eklogin | ekshell | rkinit | cvspserver | wap-wsp | wap-wtp-wsp | [0-9-]
</description>
                <noNotification/>
                <dataType>
                    <sequence>
                        <derivedDataTypeRef name="Port">
                            <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                        </derivedDataTypeRef>
                        <minLength>0</minLength>
                        <maxLength>10</maxLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="msPort">
                <description>Match MS port

Values: ftp-data | ftp | ssh | telnet | smtp | tacacs | tacacs-ds | domain | dhcp | bootps | bootpc | tftp | finger | http | kerberos-sec | pop3 | sunrpc | ident | nntp | ntp | netbios-ns | netbios-dgm | netbios-ssn | imap | snmp  snmptrap | xdmcp | bgp | ldap | mobileip-agent | mobilip-nm | msdp | https | snpp | biff | exec | login | who | cmd | syslog | printer | talk | ntalk | rip | timed | klogin | kshell | ldp | krb-prop | krbupdate | kpasswd | socks | afs | pptp | radius | radacct | nfsd | eklogin | ekshell | rkinit | cvspserver | wap-wsp | wap-wtp-wsp | [0-9-]</description>
                <noNotification/>
                <dataType>
                    <sequence>
                        <derivedDataTypeRef name="Port">
                            <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                        </derivedDataTypeRef>
                        <minLength>0</minLength>
                        <maxLength>10</maxLength>
                    </sequence>
                </dataType>
            </attribute>
        </class>
        <class name="Then">
            <description>Action to take if the 'from' condition is matched</description>
            <attribute name="thenID">
                <description>Single instance node must have '1' as name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="SingletonNodeName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="redirectUnauthorized">
                <description>Redirect the flow if not authorized</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="ServiceDataFlowId">
            <description>Override service data flow id</description>
            <attribute name="serviceDataFlowIdID">
                <description>Single instance node must have '1' as name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="SingletonNodeName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="payload">
                <description>Identifier for payload bytes</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedU32">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="ProtocolInspection">
            <description>Protocol inspection settings for flow</description>
            <dependenciesScript><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">]]>&#13;<![CDATA[
    <pattern>]]>&#13;<![CDATA[
        <rule>]]>&#13;<![CDATA[
            <assert id='set' test='exists(../../From/Protocol/Tcp) or exists(../../From/Protocol/Udp) or (not(exists(../../From/Protocol)))'><name path='.'/>: Rule must allow TCP or UDP protocols</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @httpWspRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/HttpWspRuleSet/@httpWspRuleSetId)'><name path='.'/>,httpWspRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @smtpRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/SmtpRuleSet/@smtpRuleSetId)'><name path='.'/>,smtpRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @pop3RuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/Pop3RuleSet/@pop3RuleSetId)'><name path='.'/>,pop3RuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @imapRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/ImapRuleSet/@imapRuleSetId)'><name path='.'/>,imapRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @ftpRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/FtpRuleSet/@ftpRuleSetId)'><name path='.'/>,ftpRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @tftpRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/TftpRuleSet/@tftpRuleSetId)'><name path='.'/>,tftpRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @rtspRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/RtspRuleSet/@rtspRuleSetId)'><name path='.'/>,rtspRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @sipRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/SipRuleSet/@sipRuleSetId)'><name path='.'/>,sipRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[            <assert id='set' test='every $ruleSet in @dnsRuleSet satisfies ($ruleSet = /ManagedElement/Epg/Pgw/ServiceIdentification/DnsRuleSet/@dnsRuleSetId)'><name path='.'/>,dnsRuleSet: Rule set must be configured</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @httpWspRuleSet satisfies (not(exists(@smtpRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@imapRuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@sipRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,httpWspRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @smtpRuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@imapRuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@sipRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,smtpRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @pop3RuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@smtpRuleSet)) and not(exists(@imapRuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@sipRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,pop3RuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @imapRuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@smtpRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@sipRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,imapRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @ftpRuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@smtpRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@imapRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@sipRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,ftpRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @tftpRuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@smtpRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@imapRuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@sipRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,tftpRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @rtspRuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@smtpRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@imapRuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@sipRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,rtspRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @sipRuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@smtpRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@imapRuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@dnsRuleSet)))'><name path='.'/>,sipRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $ruleSet in @dnsRuleSet satisfies (not(exists(@httpWspRuleSet)) and not(exists(@smtpRuleSet)) and not(exists(@pop3RuleSet)) and not(exists(@imapRuleSet)) and not(exists(@ftpRuleSet)) and not(exists(@tftpRuleSet)) and not(exists(@rtspRuleSet)) and not(exists(@sipRuleSet)))'><name path='.'/>,dnsRuleSet: The following attributes can not be combined: http-wsp-rule-set, smtp-rule-set, pop3-rule-set, imap-rule-set, ftp-rule-set, tftp-rule-set, rtsp-rule-set, sip-rule-set, dns-rule-set</assert>]]>&#13;<![CDATA[
            <assert id='set' test='every $attr in @redirectUnauthorized satisfies (exists(/ManagedElement/Epg/Pgw/License/@automaticRedirection))'><name path='.'/>,redirectUnauthorized: Redirect must be licensed</assert>]]>&#13;<![CDATA[
        </rule>]]>&#13;<![CDATA[
    </pattern>]]>&#13;<![CDATA[
</schema>]]></dependenciesScript>
            <attribute name="protocolInspectionID">
                <description>Single instance node must have '1' as name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="SingletonNodeName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="httpWspRuleSet">
                <description>Apply a HTTP/WSP rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="smtpRuleSet">
                <description>Apply an SMTP rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="pop3RuleSet">
                <description>Apply a POP3 rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="imapRuleSet">
                <description>Apply an IMAP rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="ftpRuleSet">
                <description>Apply an FTP rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="tftpRuleSet">
                <description>Apply a TFTP rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="rtspRuleSet">
                <description>Apply an RTSP rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="sipRuleSet">
                <description>Apply a SIP rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="dnsRuleSet">
                <description>Apply a DNS rule set for transactions</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="RangedString62">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="redirectUnauthorized">
                <description>Redirect the flow if not authorized</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <boolean/>
                </dataType>
            </attribute>
        </class>
        <class name="Protocol">
            <description>Protocol</description>
            <attribute name="protocolID">
                <description>Single instance node must have '1' as name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="SingletonNodeName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="ah">
                <description>IP Security authentication header</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="egp">
                <description>Exterior gateway protocol</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="rsvp">
                <description>Resource Reservation Protocol</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="pim">
                <description>Protocol Independent Multicast</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="ospf">
                <description>Open Shortest Path First</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="ipip">
                <description>IP in IP</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="igmp">
                <description>Internet Group Management Protocol</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="icmp">
                <description>Internet Control Message Protocol</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="gre">
                <description>Generic routing encapsulation</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="esp">
                <description>IPSec Encapsulating Security Payload</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="sctp">
                <description>Stream Control Transmission Protocol</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="number">
                <description>Numeric protocol value</description>
                <noNotification/>
                <dataType>
                    <sequence>
                        <derivedDataTypeRef name="Number">
                            <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                        </derivedDataTypeRef>
                        <minLength>0</minLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="icmpv6">
                <description>Internet Control Message Protocol version 6</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="Signaling">
            <description>Signaling</description>
            <dependenciesScript><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">]]>&#13;<![CDATA[
    <pattern>]]>&#13;<![CDATA[
        <rule>]]>&#13;<![CDATA[
            <assert id='set' test='not(exists(../../../@msPrefix))'><name path='.'/>: Not compatible with ms-prefix</assert>]]>&#13;<![CDATA[
            <assert id='set' test='not(exists(../../../@msAddress))'><name path='.'/>: Not compatible with ms-address</assert>]]>&#13;<![CDATA[
            <assert id='set' test='not(exists(../../../@networkPort))'><name path='.'/>: Not compatible with network-port</assert>]]>&#13;<![CDATA[
            <assert id='set' test='not(exists(../../../@msPort))'><name path='.'/>: Not compatible with ms-port</assert>]]>&#13;<![CDATA[
            <assert id='set' test='not(exists(../../../../Then/ProtocolInspection))'><name path='.'/>: Not compatible with protocol-inspection in the then clause</assert>]]>&#13;<![CDATA[
            <assert id='set' test='not(exists(../../../../Then/@redirectUnauthorized))'><name path='.'/>: Not compatible with redirect-unauthorized in the then clause</assert>]]>&#13;<![CDATA[
        </rule>]]>&#13;<![CDATA[
    </pattern>]]>&#13;<![CDATA[
</schema>]]></dependenciesScript>
            <attribute name="signalingID">
                <description>Single instance node must have '1' as name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="SingletonNodeName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="setup">
                <description>Match setup signaling traffic</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
            <attribute name="teardown">
                <description>Match teardown signaling traffic</description>
                <domainExtension domain="ECIM">
                    <extension name="isNillable" value="true"/>
                </domainExtension>
                <noNotification/>
                <dataType>
                    <derivedDataTypeRef name="EcimEmpty">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <class name="Tcp">
            <description>Transmission control protocol</description>
            <attribute name="tcpID">
                <description>Single instance node must have '1' as name</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <derivedDataTypeRef name="SingletonNodeName">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </derivedDataTypeRef>
                </dataType>
            </attribute>
        </class>
        <relationship name="HeaderRule_to_Term">
            <containment>
                <parent>
                    <hasClass name="HeaderRule">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Term">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>128</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
        <relationship name="Term_to_From">
            <containment>
                <parent>
                    <hasClass name="Term">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="From">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
        <relationship name="Term_to_Then">
            <containment>
                <parent>
                    <hasClass name="Term">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Then">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
        <relationship name="Then_to_ServiceDataFlowId">
            <containment>
                <parent>
                    <hasClass name="Then">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="ServiceDataFlowId">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
        <relationship name="Then_to_ProtocolInspection">
            <containment>
                <parent>
                    <hasClass name="Then">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="ProtocolInspection">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
        <relationship name="From_to_Protocol">
            <containment>
                <parent>
                    <hasClass name="From">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Protocol">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
        <relationship name="Protocol_to_Tcp">
            <containment>
                <parent>
                    <hasClass name="Protocol">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Tcp">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
        <relationship name="Tcp_to_Signaling">
            <containment>
                <parent>
                    <hasClass name="Tcp">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Signaling">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
    </mim>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <interMim>
        <relationship name="ServiceIdentification_to_HeaderRule">
            <containment>
                <parent>
                    <hasClass name="ServiceIdentification">
                        <mimName>Epg_Pgw_ServiceIdentification</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="HeaderRule">
                        <mimName>Epg_Pgw_SI_HeaderRule</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>512</max>
                    </cardinality>
                </child>
            </containment>
        </relationship>
    </interMim>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</models>