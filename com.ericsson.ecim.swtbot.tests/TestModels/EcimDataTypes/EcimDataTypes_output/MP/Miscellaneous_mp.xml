<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2015 Ericsson AB. 
	All rights reserved 

	DX ECIM Tool-chain generated this file on Apr 20, 2015 4:08:56 PM using:
	* com.ericsson.ecim.m2m 3.0.0.qualifier
	* com.ericsson.ecim.dsl 3.0.0.qualifier
	* com.ericsson.ecim.edm 3.0.0.qualifier
--><!DOCTYPE models SYSTEM "mp.dtd">
<models>
  <dtdVersion>G</dtdVersion>
  <momMetaData>
    <momTitle>title</momTitle>
    <momSubTitle>sub title</momSubTitle>
    <momIdentity>
      <docNum>0</docNum>
      <docLang>English</docLang>
      <docRev>0</docRev>
      <docDate>date</docDate>
    </momIdentity>
  </momMetaData>
  <mim author="" contact="" date="" docNo="" name="Miscellaneous" namespace="urn:com:ericsson:ecim:Miscellaneous" namespacePrefix="miscellaneous" organization="" release="2" revision="" version="3">
    <domainExtension domain="ECIM">
      <extension name="immNamespace" value="NONE"/>
    </domainExtension>
    <struct name="complexStruct">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="3"/>
        <extension name="originatingMimName" value="EcimStruct"/>
        <extension name="originatingMimVersion" value="4"/>
      </domainExtension>
      <structMember name="equiment">
        <enumRef name="equipmentList">
          <mimName>Miscellaneous</mimName>
        </enumRef>
      </structMember>
      <structMember name="action">
        <moRef name="Actions">
          <mimName>EcimActions</mimName>
        </moRef>
      </structMember>
      <structMember name="derivedFloat">
        <derivedDataTypeRef name="MyDerivedFloat(negativeRange)">
          <mimName>Miscellaneous</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="derivedString">
        <derivedDataTypeRef name="DerivedString">
          <mimName>Miscellaneous</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="derivedInt">
        <derivedDataTypeRef name="MyDerivedInteger(negativeRange)">
          <mimName>Miscellaneous</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="ecimIntegerSm">
        <description>qwe</description>
        <derivedDataTypeRef name="EcimStruct_complexStruct_ecimIntegerSm">
          <defaultValue>12</defaultValue>
          <mimName>Miscellaneous</mimName>
        </derivedDataTypeRef>
      </structMember>
      <structMember name="ecimIntegerSmMulti">
        <description>qwe</description>
        <sequence>
          <derivedDataTypeRef name="EcimStruct_complexStruct_ecimIntegerSmMulti">
            <defaultValue>12</defaultValue>
            <mimName>EcimStruct</mimName>
          </derivedDataTypeRef>
          <minLength>1</minLength>
          <maxLength>100</maxLength>
          <nonUnique/>
          <seqDefaultValue>
            <defaultValue>12</defaultValue>
          </seqDefaultValue>
        </sequence>
      </structMember>
    </struct>
    <struct name="struct1">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="2"/>
        <extension name="originatingMimName" value="EcimLibrary"/>
        <extension name="originatingMimVersion" value="5"/>
      </domainExtension>
      <structMember name="member1">
        <string>
          <defaultValue>somevalue</defaultValue>
        </string>
      </structMember>
      <structMember name="member2">
        <int8>
          <defaultValue>3</defaultValue>
        </int8>
      </structMember>
    </struct>
    <enum name="enum1">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="2"/>
        <extension name="originatingMimName" value="EcimLibrary"/>
        <extension name="originatingMimVersion" value="5"/>
      </domainExtension>
      <enumMember name="option1">
        <value>1</value>
      </enumMember>
      <enumMember name="option2">
        <value>2</value>
      </enumMember>
      <enumMember name="option3">
        <value>3</value>
      </enumMember>
    </enum>
    <enum name="equipmentList">
      <description>Equipment List</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="2"/>
        <extension name="originatingMimName" value="EcimEnum"/>
        <extension name="originatingMimVersion" value="4"/>
      </domainExtension>
      <enumMember name="router">
        <description>router</description>
        <value>1</value>
      </enumMember>
      <enumMember name="switchL2">
        <description>switchL2</description>
        <value>2</value>
      </enumMember>
      <enumMember name="switchL3">
        <description>switchL3</description>
        <value>3</value>
      </enumMember>
      <enumMember name="SBG">
        <description>SBG</description>
        <value>4</value>
      </enumMember>
      <enumMember name="slotMachine">
        <description>slotMachine</description>
        <value>6</value>
      </enumMember>
    </enum>
    <derivedDataType name="derivedFloat1">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="2"/>
        <extension name="originatingMimName" value="EcimLibrary"/>
        <extension name="originatingMimVersion" value="5"/>
      </domainExtension>
      <baseType>
        <double/>
      </baseType>
    </derivedDataType>
    <derivedDataType name="MyDerivedInteger(positiveRange)">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="1"/>
        <extension name="originatingMimName" value="EcimInt"/>
        <extension name="originatingMimVersion" value="23"/>
      </domainExtension>
      <baseType>
        <int64>
          <range>
            <min>-1</min>
          </range>
          <ranges>
            <subrange>
              <min>-1</min>
              <max>*</max>
            </subrange>
          </ranges>
        </int64>
      </baseType>
    </derivedDataType>
    <derivedDataType name="DerivedString">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="22"/>
        <extension name="originatingMimName" value="EcimString"/>
        <extension name="originatingMimVersion" value="2"/>
      </domainExtension>
      <baseType>
        <string>
          <validValues>[a-zA-z0-9]+,[a-zA-z0-9]</validValues>
        </string>
      </baseType>
      <validationRules>
        <rule exceptionText="" format="posix_ere" name="Pattern Constraint"><![CDATA[[a-zA-z0-9]+,[a-zA-z0-9]]]></rule>
      </validationRules>
    </derivedDataType>
    <derivedDataType name="derivedBool1">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="2"/>
        <extension name="originatingMimName" value="EcimLibrary"/>
        <extension name="originatingMimVersion" value="5"/>
      </domainExtension>
      <baseType>
        <boolean/>
      </baseType>
    </derivedDataType>
    <derivedDataType name="derivedInt1">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="2"/>
        <extension name="originatingMimName" value="EcimLibrary"/>
        <extension name="originatingMimVersion" value="5"/>
      </domainExtension>
      <baseType>
        <int32/>
      </baseType>
    </derivedDataType>
    <derivedDataType name="derivedString">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="2"/>
        <extension name="originatingMimName" value="EcimLibrary"/>
        <extension name="originatingMimVersion" value="5"/>
      </domainExtension>
      <baseType>
        <string/>
      </baseType>
    </derivedDataType>
    <derivedDataType name="MyDerivedFloat(negativeRange)">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="1"/>
        <extension name="originatingMimName" value="EcimFloat"/>
        <extension name="originatingMimVersion" value="23"/>
      </domainExtension>
      <baseType>
        <double>
          <range>
            <min>-50</min>
            <max>456</max>
          </range>
          <ranges>
            <subrange>
              <min>-50</min>
              <max>456</max>
            </subrange>
          </ranges>
        </double>
      </baseType>
    </derivedDataType>
    <derivedDataType name="MyDerivedInteger(negativeRange)">
      <domainExtension domain="ECIM">
        <extension name="originatingMimRelease" value="1"/>
        <extension name="originatingMimName" value="EcimInt"/>
        <extension name="originatingMimVersion" value="23"/>
      </domainExtension>
      <baseType>
        <int8>
          <range>
            <min>-128</min>
            <max>-5</max>
          </range>
        </int8>
      </baseType>
    </derivedDataType>
    <derivedDataType name="EcimStruct_complexStruct_ecimIntegerSm">
      <baseType>
        <int64>
          <range>
            <min>0</min>
            <max>15</max>
          </range>
          <ranges>
            <subrange>
              <min>0</min>
              <max>15</max>
            </subrange>
          </ranges>
        </int64>
      </baseType>
    </derivedDataType>
    <derivedDataType name="EcimStruct_complexStruct_ecimIntegerSmMulti">
      <baseType>
        <int64>
          <range>
            <min>0</min>
            <max>15</max>
          </range>
          <ranges>
            <subrange>
              <min>0</min>
              <max>15</max>
            </subrange>
          </ranges>
        </int64>
      </baseType>
    </derivedDataType>
    <class name="rootMoClass">
      <root/>
      <attribute name="id">
        <mandatory/>
        <noNotification/>
        <restricted/>
        <key/>
        <dataType>
          <string/>
        </dataType>
      </attribute>
      <attribute name="structA">
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <structRef name="complexStruct">
            <mimName>Miscellaneous</mimName>
          </structRef>
        </dataType>
      </attribute>
    </class>
    <class name="UseOtherMomDataTypes">
      <attribute name="id">
        <mandatory/>
        <noNotification/>
        <restricted/>
        <key/>
        <dataType>
          <string/>
        </dataType>
      </attribute>
      <attribute name="refLibDerivedBool1">
        <dataType>
          <sequence>
            <derivedDataTypeRef name="derivedBool1">
              <mimName>Miscellaneous</mimName>
            </derivedDataTypeRef>
            <minLength>0</minLength>
            <maxLength>2</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refLibDerivedFloat1">
        <dataType>
          <sequence>
            <derivedDataTypeRef name="derivedFloat1">
              <mimName>Miscellaneous</mimName>
            </derivedDataTypeRef>
            <minLength>0</minLength>
            <maxLength>2</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refLibDerivedInt1">
        <dataType>
          <sequence>
            <derivedDataTypeRef name="derivedInt1">
              <mimName>Miscellaneous</mimName>
            </derivedDataTypeRef>
            <minLength>0</minLength>
            <maxLength>4</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refLibDerivedString1">
        <dataType>
          <sequence>
            <derivedDataTypeRef name="derivedString">
              <mimName>Miscellaneous</mimName>
            </derivedDataTypeRef>
            <minLength>0</minLength>
            <maxLength>6</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refLibDerivedEnum1">
        <dataType>
          <sequence>
            <enumRef name="enum1">
              <mimName>Miscellaneous</mimName>
            </enumRef>
            <minLength>0</minLength>
            <maxLength>3</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refLibStruct1">
        <dataType>
          <sequence>
            <structRef name="struct1">
              <mimName>Miscellaneous</mimName>
            </structRef>
            <minLength>0</minLength>
            <maxLength>3</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refAction1">
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <moRef name="Actions">
            <mimName>EcimActions</mimName>
          </moRef>
        </dataType>
      </attribute>
      <attribute name="refEnum1">
        <dataType>
          <sequence>
            <enumRef name="equipmentList">
              <mimName>Miscellaneous</mimName>
            </enumRef>
            <minLength>0</minLength>
            <maxLength>3</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refDerivedFloat1">
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <derivedDataTypeRef name="MyDerivedFloat(negativeRange)">
            <mimName>Miscellaneous</mimName>
          </derivedDataTypeRef>
        </dataType>
      </attribute>
      <attribute name="refDerivedInt1">
        <dataType>
          <sequence>
            <derivedDataTypeRef name="MyDerivedInteger(positiveRange)">
              <mimName>Miscellaneous</mimName>
            </derivedDataTypeRef>
            <minLength>0</minLength>
            <maxLength>4</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refDerivedString1">
        <dataType>
          <sequence>
            <derivedDataTypeRef name="DerivedString">
              <mimName>Miscellaneous</mimName>
            </derivedDataTypeRef>
            <minLength>0</minLength>
            <maxLength>2</maxLength>
            <nonUnique/>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="refDerivedStruct1">
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <structRef name="complexStruct">
            <mimName>Miscellaneous</mimName>
          </structRef>
        </dataType>
      </attribute>
    </class>
    <relationship name="rootMoClass_to_UseOtherMomDataTypes">
      <containment>
        <parent>
          <hasClass name="rootMoClass">
            <mimName>Miscellaneous</mimName>
          </hasClass>
        </parent>
        <child>
          <hasClass name="UseOtherMomDataTypes">
            <mimName>Miscellaneous</mimName>
          </hasClass>
          <cardinality>
            <min>1</min>
            <max>1</max>
          </cardinality>
        </child>
        <domainExtension domain="ECIM">
          <extension name="canCreate" value="true"/>
          <extension name="canDelete" value="true"/>
        </domainExtension>
      </containment>
    </relationship>
  </mim>
  <interMim>
    <relationship name="Root_to_rootMoClass">
      <domainExtension domain="CoreMW">
        <extension name="splitImmDn" value="true"/>
      </domainExtension>
      <containment>
        <parent>
          <hasClass name="Root">
            <mimName>RootMom</mimName>
          </hasClass>
        </parent>
        <child>
          <hasClass name="rootMoClass">
            <mimName>Miscellaneous</mimName>
          </hasClass>
          <cardinality>
            <min>1</min>
            <max>1</max>
          </cardinality>
        </child>
        <domainExtension domain="ECIM">
          <extension name="canCreate" value="true"/>
          <extension name="canDelete" value="true"/>
        </domainExtension>
      </containment>
    </relationship>
  </interMim>
</models>
