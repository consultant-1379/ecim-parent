<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2015 Ericsson AB. 
	All rights reserved 

	DX ECIM Tool-chain generated this file on Oct 1, 2015 1:59:35 PM using:
	* com.ericsson.ecim.m2m 2.14.3.201506050754
	* com.ericsson.ecim.dsl 2.14.3.201506050754
	* com.ericsson.ecim.edm 2.14.3.201506050754
--><!DOCTYPE models SYSTEM "mp.dtd">
<models>
  <dtdVersion>G</dtdVersion>
  <momMetaData>
    <momTitle>title</momTitle>
    <momSubTitle>sub title</momSubTitle>
    <momIdentity>
      <docNum>0</docNum>
      <docLang>English</docLang>
      <docRev>0</docRev>
      <docDate/>
    </momIdentity>
    <createdBy>
      <signature>EAB/FJP/TA UABERPE</signature>
    </createdBy>
    <approvedBy>
      <signature>EAB/FJP/TA UABERPE</signature>
    </approvedBy>
  </momMetaData>
  <mim author="EAB/FJP/TA UABERPE" contact="EAB/FJP/TA UABERPE" correction="0" date="" docNo="" name="RtnIkev2PolicyProfile" namespace="urn:com:ericsson:ecim:RtnIkev2PolicyProfile" namespacePrefix="rtnikev2policyprofile" organization="" release="2" revision="" variant="Model" version="1">
    <description>Ipsec Ikev2PolicyProfile package</description>
    <domainExtension domain="ECIM">
      <extension name="immNamespace" value="NONE"/>
    </domainExtension>
    <struct name="Ikev2Proposal">
      <description>Holds an IKEv2 transform proposal used during IKEv2 SA negotiation.

Multiple IKEv2 Transforms can be proposed during an IKEv2 session initiation in an ordered list.</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="1"/>
        <extension name="originatingMimName" value="RtnIpsec"/>
        <extension name="originatingMimRelease" value="2"/>
      </domainExtension>
      <structMember name="diffieHellmanGroup">
        <description>Specifies a Diffie-Hellman group. 
When unset (nil), the node will send all diffie-hellman groups supported by the node in the proposal. The node will in such a case send a diffie-hellman value based on diffie-hellman group 14 in the initial exchange.&#13;
</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <enumRef name="DiffieHellmanGroup">
          <mimName>RtnIkev2PolicyProfile</mimName>
        </enumRef>
      </structMember>
      <structMember name="encryptionAlgorithm">
        <description>Specifies an encryption algorithm. 
When unset (nil), the node will send all encryption algorithms supported by the node in the proposal.&#13;
</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <enumRef name="IkeEncryptionAlgorithm">
          <mimName>RtnIkev2PolicyProfile</mimName>
        </enumRef>
      </structMember>
      <structMember name="integrityAlgorithm">
        <description>Specifies an algorithm for integrity check. 
When unset (nil), the node will send all integrity algorithms supported by the node in the proposal.&#13;
</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <enumRef name="IkeIntegrityAlgorithm">
          <mimName>RtnIkev2PolicyProfile</mimName>
        </enumRef>
      </structMember>
      <structMember name="pseudoRandomFunction">
        <description>Specifies the type of Pseudo-random function.&#13;
When unset (nil), the node will send all prf algorithms supported by the node in the proposal.&#13;
</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <enumRef name="PseudoRandomFunction">
          <mimName>RtnIkev2PolicyProfile</mimName>
        </enumRef>
      </structMember>
    </struct>
    <enum name="IkeEncryptionAlgorithm">
      <description>Ike encryption algorithms. &#13;
</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="1"/>
        <extension name="originatingMimName" value="RtnIpsec"/>
        <extension name="originatingMimRelease" value="2"/>
      </domainExtension>
      <enumMember name="ENCR_3DES">
        <description>Specification:  RFC_5996. &#13;
</description>
        <value>3</value>
      </enumMember>
      <enumMember name="ENCR_AES_CBC_128">
        <description>Specification:  RFC_5996. &#13;
</description>
        <value>1024</value>
      </enumMember>
      <enumMember name="ENCR_AES_CBC_256">
        <description>Specification:  RFC_5996. &#13;
</description>
        <value>1026</value>
      </enumMember>
    </enum>
    <enum name="IkeIntegrityAlgorithm">
      <description>Ike integrity algorithms. &#13;
</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="1"/>
        <extension name="originatingMimName" value="RtnIpsec"/>
        <extension name="originatingMimRelease" value="2"/>
      </domainExtension>
      <enumMember name="AUTH_HMAC_MD5_96">
        <description>Specification:  RFC_5996. &#13;
</description>
        <value>1</value>
      </enumMember>
      <enumMember name="AUTH_HMAC_SHA1_96">
        <description>Specification:  RFC_5996. &#13;
</description>
        <value>2</value>
      </enumMember>
      <enumMember name="AUTH_AES_XCBC_96">
        <description>Specification: RFC_5996. &#13;
</description>
        <value>5</value>
      </enumMember>
    </enum>
    <enum name="DiffieHellmanGroup">
      <description>Diffie-Hellman groups. &#13;
</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="1"/>
        <extension name="originatingMimName" value="RtnIpsec"/>
        <extension name="originatingMimRelease" value="2"/>
      </domainExtension>
      <enumMember name="MODP_1024_GROUP_2">
        <description>Specification:  RFC_5996. </description>
        <value>2</value>
      </enumMember>
      <enumMember name="MODP_2048_GROUP_14">
        <description>Specification:  RFC_3526.&#13;
</description>
        <value>14</value>
      </enumMember>
    </enum>
    <enum name="PseudoRandomFunction">
      <description>Available pseudo-random functions. &#13;
</description>
      <domainExtension domain="ECIM">
        <extension name="originatingMimVersion" value="1"/>
        <extension name="originatingMimName" value="RtnIpsec"/>
        <extension name="originatingMimRelease" value="2"/>
      </domainExtension>
      <enumMember name="PRF_HMAC_MD5">
        <description>Specification:  RFC_2104. &#13;
</description>
        <value>1</value>
      </enumMember>
      <enumMember name="PRF_HMAC_SHA1">
        <description>Specification:  RFC2104. &#13;
</description>
        <value>2</value>
      </enumMember>
      <enumMember name="PRF_AES128_XCBC">
        <description>Specification:  RFC_4434. &#13;
</description>
        <value>4</value>
      </enumMember>
    </enum>
    <derivedDataType name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_ikeSaLifetime">
      <baseType>
        <uint32>
          <range>
            <min>60</min>
            <max>5000</max>
          </range>
          <ranges>
            <subrange>
              <min>60</min>
              <max>5000</max>
            </subrange>
          </ranges>
          <unit>mins</unit>
        </uint32>
      </baseType>
    </derivedDataType>
    <derivedDataType name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_userLabel">
      <baseType>
        <string>
          <lengthRange>
            <min>1</min>
            <max>128</max>
          </lengthRange>
          <stringLength>
            <subrange>
              <min>1</min>
              <max>128</max>
            </subrange>
          </stringLength>
        </string>
      </baseType>
    </derivedDataType>
    <derivedDataType name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_dpdTime">
      <baseType>
        <uint32>
          <range>
            <min>30</min>
            <max>1800</max>
          </range>
          <ranges>
            <subrange>
              <min>30</min>
              <max>1800</max>
            </subrange>
          </ranges>
          <unit>secs</unit>
        </uint32>
      </baseType>
    </derivedDataType>
    <derivedDataType name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_ikeDscp">
      <baseType>
        <uint8>
          <range>
            <min>0</min>
            <max>63</max>
          </range>
          <ranges>
            <subrange>
              <min>0</min>
              <max>63</max>
            </subrange>
          </ranges>
        </uint8>
      </baseType>
    </derivedDataType>
    <class name="Ikev2PolicyProfile">
      <description>Common information for multiple IKE sessions to be instantiated on a managed element.&#13;
&#13;
One or more Ikev2Session instances might refer to this instance.</description>
      <validationRules>
        <rule exceptionText="" format="ECIM_Schematron_1.0" name="Ikev2PolicyProfile"><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
	<pattern>
		<rule> 
		<assert test='every $ip in @ikev2Proposal satisfies (((exists($ip/@diffieHellmanGroup)) and (exists($ip/@pseudoRandomFunction)) and (exists($ip/@integrityAlgorithm)) and (exists($ip/@encryptionAlgorithm))) or ((not(exists($ip/@diffieHellmanGroup))) and (not(exists($ip/@pseudoRandomFunction))) and (not(exists($ip/@integrityAlgorithm))) and (not(exists($ip/@encryptionAlgorithm)))))'><value-of select="."/> None or all attributes of Ikev2Proposal must be present.</assert>
		</rule>
	</pattern>
</schema>]]></rule>
      </validationRules>
      <root/>
      <dependenciesScript><![CDATA[<schema xmlns="http://purl.oclc.org/dsdl/schematron">
	<pattern>
		<rule> 
		<assert test='every $ip in @ikev2Proposal satisfies (((exists($ip/@diffieHellmanGroup)) and (exists($ip/@pseudoRandomFunction)) and (exists($ip/@integrityAlgorithm)) and (exists($ip/@encryptionAlgorithm))) or ((not(exists($ip/@diffieHellmanGroup))) and (not(exists($ip/@pseudoRandomFunction))) and (not(exists($ip/@integrityAlgorithm))) and (not(exists($ip/@encryptionAlgorithm)))))'><value-of select="."/> None or all attributes of Ikev2Proposal must be present.</assert>
		</rule>
	</pattern>
</schema>]]></dependenciesScript>
      <attribute name="ikev2PolicyProfileId">
        <description>The value component of the RDN.</description>
        <mandatory/>
        <noNotification/>
        <restricted/>
        <key/>
        <dataType>
          <string/>
        </dataType>
      </attribute>
      <attribute name="credential">
        <description>Reference to the managed element own credential to be used in IKEv2 negotiation. &#13;
&#13;
Valid reference is NodeCredential in Certificate Management Branch.&#13;&#13;&#13;
If credential and trustCategory are not specified, then preshared key-based authentication is selected. The referring Ikev2Session instances must have preshared keys installed.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <restricted/>
        <isNillable/>
        <dataType>
          <moRef name="NodeCredential">
            <mimName>ECIM_CertM</mimName>
          </moRef>
        </dataType>
      </attribute>
      <attribute name="trustCategory">
        <description>Reference to a  trusted certificates group.&#13;
&#13;
Valid reference is TrustCategory in Certificate Management Branch.&#13;&#13;&#13;
If credential and trustedCertificates are not specified, then pre-shared key based authentication is selected. The referring Ikev2Session instances have to have pre-shared keys installed.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <restricted/>
        <isNillable/>
        <dataType>
          <moRef name="TrustCategory">
            <mimName>ECIM_CertM</mimName>
          </moRef>
        </dataType>
      </attribute>
      <attribute name="ikev2Proposal">
        <description>An ordered list of IKE proposals to be used for IKE SA negotiation.&#13;
&#13;
At least one IKE proposal must be specified. The first one in the list has the highest priority.</description>
        <mandatory/>
        <restricted/>
        <dataType>
          <sequence>
            <structRef name="Ikev2Proposal">
              <mimName>RtnIkev2PolicyProfile</mimName>
            </structRef>
            <minLength>1</minLength>
            <maxLength>2</maxLength>
            <nonUnique/>
            <ordered/>
          </sequence>
        </dataType>
        <dependencies>None or all attributes of Ikev2Proposal must be present.</dependencies>
      </attribute>
      <attribute name="ikeSaLifetime">
        <description>Lifetime for IKE SA. In order for the node to have completed the rekeying process before the lifetime expires, the node will initiate rekeying according to a soft lifetime. The soft lifetime is calculated as  (0.8+0.1*R)*ikeSaLifetime, where R is a random factor between 0 and 1. </description>
        <restricted/>
        <dataType>
          <derivedDataTypeRef name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_ikeSaLifetime">
            <defaultValue>1440</defaultValue>
            <mimName>RtnIkev2PolicyProfile</mimName>
          </derivedDataTypeRef>
        </dataType>
      </attribute>
      <attribute name="userLabel">
        <description>Label for free use.</description>
        <domainExtension domain="ECIM">
          <extension name="isNillable" value="true"/>
        </domainExtension>
        <isNillable/>
        <dataType>
          <derivedDataTypeRef name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_userLabel">
            <mimName>RtnIkev2PolicyProfile</mimName>
          </derivedDataTypeRef>
        </dataType>
      </attribute>
      <attribute name="dpdTime">
        <description>The maximum time  to detect that a IKE SA is down.  &#13;
&#13;
If the SA is down, an attempt is made to re-establish the SA.&#13;
If this attempt fails, an alarm is issued.</description>
        <restricted/>
        <dataType>
          <derivedDataTypeRef name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_dpdTime">
            <defaultValue>60</defaultValue>
            <mimName>RtnIkev2PolicyProfile</mimName>
          </derivedDataTypeRef>
        </dataType>
      </attribute>
      <attribute name="reservedBy">
        <description>Contains a list of MO instances that reserve this MO instance.</description>
        <readOnly/>
        <dataType>
          <sequence>
            <moRef name="ManagedObject"/>
            <minLength>0</minLength>
          </sequence>
        </dataType>
      </attribute>
      <attribute name="ikeDscp">
        <description>The DSCP value that the node will use when transmitting IKE messages.</description>
        <restricted/>
        <dataType>
          <derivedDataTypeRef name="RtnIkev2PolicyProfile_Ikev2PolicyProfile_ikeDscp">
            <defaultValue>48</defaultValue>
            <mimName>RtnIkev2PolicyProfile</mimName>
          </derivedDataTypeRef>
        </dataType>
      </attribute>
    </class>
    <relationship name="Ikev2PolicyProfile_credential_to_NodeCredential_reservedByUser">
      <biDirectionalAssociation>
        <associationEnd name="credential">
          <hasClass name="NodeCredential">
            <mimName>ECIM_CertM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
            <max>1</max>
          </cardinality>
          <isReserving/>
        </associationEnd>
        <associationEnd name="reservedByUser">
          <hasClass name="Ikev2PolicyProfile">
            <mimName>RtnIkev2PolicyProfile</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
          </cardinality>
        </associationEnd>
      </biDirectionalAssociation>
    </relationship>
    <relationship name="Ikev2PolicyProfile_trustCategory_to_TrustCategory_reservedByUser">
      <biDirectionalAssociation>
        <associationEnd name="trustCategory">
          <hasClass name="TrustCategory">
            <mimName>ECIM_CertM</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
            <max>1</max>
          </cardinality>
          <isReserving/>
        </associationEnd>
        <associationEnd name="reservedByUser">
          <hasClass name="Ikev2PolicyProfile">
            <mimName>RtnIkev2PolicyProfile</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
          </cardinality>
        </associationEnd>
      </biDirectionalAssociation>
    </relationship>
  </mim>
  <interMim>
    <relationship name="Transport_to_Ikev2PolicyProfile">
      <domainExtension domain="CoreMW">
        <extension name="splitImmDn" value="false"/>
      </domainExtension>
      <containment>
        <parent>
          <hasClass name="Transport">
            <mimName>ECIM_Top</mimName>
          </hasClass>
        </parent>
        <child>
          <hasClass name="Ikev2PolicyProfile">
            <mimName>RtnIkev2PolicyProfile</mimName>
          </hasClass>
          <cardinality>
            <min>0</min>
            <max>1</max>
          </cardinality>
        </child>
        <domainExtension domain="ECIM">
          <extension name="canCreate" value="true"/>
          <extension name="canDelete" value="true"/>
        </domainExtension>
      </containment>
    </relationship>
  </interMim>
</models>