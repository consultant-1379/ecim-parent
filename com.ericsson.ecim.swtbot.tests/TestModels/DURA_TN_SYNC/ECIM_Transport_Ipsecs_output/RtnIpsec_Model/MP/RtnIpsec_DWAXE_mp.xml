<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
	Copyright (c) 2015 Ericsson AB. 
	All rights reserved 

	DX ECIM Tool-chain generated this file on Oct 13, 2015 2:45:58 PM using:
	* com.ericsson.ecim.m2m 3.0.2.qualifier
	* com.ericsson.ecim.dsl 3.0.2.qualifier
	* com.ericsson.ecim.edm 3.0.2.qualifier
--><!DOCTYPE models SYSTEM "mp.dtd">
<models>
    <dtdVersion>G</dtdVersion>
    <momMetaData>
        <momTitle>title</momTitle>
        <momSubTitle>sub title</momSubTitle>
        <momIdentity>
            <docNum>0</docNum>
            <docLang>English</docLang>
            <docRev>0</docRev>
            <docDate/>
        </momIdentity>
        <createdBy>
            <signature>EAB/FJP/TA UABERPE</signature>
        </createdBy>
        <approvedBy>
            <signature>EAB/FJP/TA UABERPE</signature>
        </approvedBy>
    </momMetaData>
    <mim author="EAB/FJP/TA UABERPE" contact="EAB/FJP/TA UABERPE" correction="2" date="" docNo="" name="RtnIpsec" namespace="urn:com:ericsson:ecim:RtnIpsec" namespacePrefix="rtnipsec" organization="" release="2" revision="" variant="Model" version="1">
        <description>ECIM Transport Ipsec MOM.</description>
        <domainExtension domain="ECIM">
            <extension name="ecimMomName" value="ECIM_Transport_Ipsec"/>
            <extension name="ecimMomVersion" value="1"/>
            <extension name="ecimMomRelease" value="0"/>
            <extension name="ecimMomCorrection" value="0"/>
            <extension name="immNamespace" value="NONE"/>
        </domainExtension>
        <implements correction="0" name="ECIM_Transport_Ipsec" release="0" version="1"/>
        <struct name="Ikev2Proposal">
            <description>Holds an IKEv2 transform proposal used during IKEv2 SA negotiation.

Multiple IKEv2 Transforms can be proposed during an IKEv2 session initiation in an ordered list.</description>
            <structMember name="diffieHellmanGroup">
                <description>Specifies a Diffie-Hellman group. 
When unset (nil), the node will send all diffie-hellman groups supported by the node in the proposal. The node will in such a case send a diffie-hellman value based on diffie-hellman group 14 in the initial exchange.&#13;
</description>
                <enumRef name="DiffieHellmanGroup">
                    <mimName>RtnIpsec</mimName>
                </enumRef>
            </structMember>
            <structMember name="encryptionAlgorithm">
                <description>Specifies an encryption algorithm. 
When unset (nil), the node will send all encryption algorithms supported by the node in the proposal.&#13;
</description>
                <enumRef name="IkeEncryptionAlgorithm">
                    <mimName>RtnIpsec</mimName>
                </enumRef>
            </structMember>
            <structMember name="integrityAlgorithm">
                <description>Specifies an algorithm for integrity check. 
When unset (nil), the node will send all integrity algorithms supported by the node in the proposal.&#13;
</description>
                <enumRef name="IkeIntegrityAlgorithm">
                    <mimName>RtnIpsec</mimName>
                </enumRef>
            </structMember>
            <structMember name="pseudoRandomFunction">
                <description>Specifies the type of Pseudo-random function.&#13;
When unset (nil), the node will send all prf algorithms supported by the node in the proposal.&#13;
</description>
                <enumRef name="PseudoRandomFunction">
                    <mimName>RtnIpsec</mimName>
                </enumRef>
            </structMember>
        </struct>
        <struct name="ChildSaLifetime">
            <description>Lifetime for the negotiated ChildSAs.</description>
            <structMember name="dataLimit">
                <description>Specifies the maximum amount of data that is allowed to be transmitted on a SA before rekeying.&#13;
</description>
                <derivedDataTypeRef name="DataLimit">
                    <mimName>RtnFilterTypes</mimName>
                </derivedDataTypeRef>
            </structMember>
            <structMember name="timeLimit">
                <description>The maximum lifetime when an SA can be used.</description>
                <derivedDataTypeRef name="TimeLimit">
                    <defaultValue>1440</defaultValue>
                    <mimName>RtnFilterTypes</mimName>
                </derivedDataTypeRef>
            </structMember>
        </struct>
        <struct name="IpsecProposal">
            <description>Ipsec Transform to be proposed during SA negotiation.</description>
            <structMember name="encryptionAlgorithm">
                <description>Specifies the algorithm used for encryption.&#13;
&#13;
When unset (nil), the node will send all encryption algorithms supported by the hardware in the proposal.</description>
                <enumRef name="ChildSaEncryptionAlgorithm">
                    <mimName>RtnIpsec</mimName>
                </enumRef>
            </structMember>
            <structMember name="integrityAlgorithm">
                <description>Specifies the algorithm used for integrity check.&#13;
&#13;
When unset (nil), the node will send all integrity algorithms supported by the hardware in the proposal.</description>
                <enumRef name="ChildSaIntegrityAlgorithm">
                    <mimName>RtnIpsec</mimName>
                </enumRef>
            </structMember>
        </struct>
        <struct name="TrafficSelector">
            <description>Traffic selector to be used for SA negotiation.</description>
            <structMember name="addressRange">
                <description>Specifies the IPv4 or IPv6 address range. &#13;
</description>
                <derivedDataTypeRef name="IpAddressRangeStr">
                    <mimName>RtnFilterTypes</mimName>
                </derivedDataTypeRef>
            </structMember>
        </struct>
        <enum name="ChildSaDirection">
            <description>Child  Security Association(SA) direction.</description>
            <enumMember name="IN">
                <value>0</value>
            </enumMember>
            <enumMember name="OUT">
                <value>1</value>
            </enumMember>
        </enum>
        <enum name="AuthenticationMethod">
            <description>Available authentication methods.</description>
            <enumMember name="PSK">
                <value>0</value>
            </enumMember>
            <enumMember name="CERTIFICATE">
                <value>1</value>
            </enumMember>
        </enum>
        <enum name="DiffieHellmanGroup">
            <description>Diffie-Hellman groups. &#13;
</description>
            <enumMember name="MODP_1024_GROUP_2">
                <description>Specification:  RFC_5996. </description>
                <value>2</value>
            </enumMember>
            <enumMember name="MODP_2048_GROUP_14">
                <description>Specification:  RFC_3526.&#13;
</description>
                <value>14</value>
            </enumMember>
        </enum>
        <enum name="IkeEncryptionAlgorithm">
            <description>Ike encryption algorithms. &#13;
</description>
            <enumMember name="ENCR_3DES">
                <description>Specification:  RFC_5996. &#13;
</description>
                <value>3</value>
            </enumMember>
            <enumMember name="ENCR_AES_CBC_128">
                <description>Specification:  RFC_5996. &#13;
</description>
                <value>1024</value>
            </enumMember>
            <enumMember name="ENCR_AES_CBC_256">
                <description>Specification:  RFC_5996. &#13;
</description>
                <value>1026</value>
            </enumMember>
        </enum>
        <enum name="IkeIntegrityAlgorithm">
            <description>Ike integrity algorithms. &#13;
</description>
            <enumMember name="AUTH_HMAC_MD5_96">
                <description>Specification:  RFC_5996. &#13;
</description>
                <value>1</value>
            </enumMember>
            <enumMember name="AUTH_HMAC_SHA1_96">
                <description>Specification:  RFC_5996. &#13;
</description>
                <value>2</value>
            </enumMember>
            <enumMember name="AUTH_AES_XCBC_96">
                <description>Specification: RFC_5996. &#13;
</description>
                <value>5</value>
            </enumMember>
        </enum>
        <enum name="PseudoRandomFunction">
            <description>Available pseudo-random functions. &#13;
</description>
            <enumMember name="PRF_HMAC_MD5">
                <description>Specification:  RFC_2104. &#13;
</description>
                <value>1</value>
            </enumMember>
            <enumMember name="PRF_HMAC_SHA1">
                <description>Specification:  RFC2104. &#13;
</description>
                <value>2</value>
            </enumMember>
            <enumMember name="PRF_AES128_XCBC">
                <description>Specification:  RFC_4434. &#13;
</description>
                <value>4</value>
            </enumMember>
        </enum>
        <enum name="ChildSaEncryptionAlgorithm">
            <description>Child Security Association(SA) encryption algorithms.</description>
            <enumMember name="ENCR_NULL">
                <description>Specification:  RFC_2410. </description>
                <value>11</value>
            </enumMember>
            <enumMember name="ENCR_AES_CBC_128">
                <description>Specification:  RFC_5996. </description>
                <value>1024</value>
            </enumMember>
            <enumMember name="ENCR_AES_CBC_256">
                <description>Specification:  RFC_5996. </description>
                <value>1026</value>
            </enumMember>
        </enum>
        <enum name="ChildSaIntegrityAlgorithm">
            <description>Child Security Association(SA) integrity algorithms.</description>
            <enumMember name="AUTH_HMAC_MD5_96">
                <description>Specification:  RFC_5996. &#13;
</description>
                <value>1</value>
            </enumMember>
            <enumMember name="AUTH_HMAC_SHA1_96">
                <description>Specification:  RFC_5996. &#13;
</description>
                <value>2</value>
            </enumMember>
            <enumMember name="AUTH_AES_XCBC_96">
                <description>Specification:  RFC_5996. &#13;
&#13;
&#13;
</description>
                <value>5</value>
            </enumMember>
        </enum>
        <enum name="ConnectionType">
            <description>Connection type for IKE session.&#13;
</description>
            <enumMember name="RESPONDER">
                <description>ME will act as responder for bringing up IKEv2 session with its IKE peer.</description>
                <value>1</value>
            </enumMember>
            <enumMember name="BOTH">
                <description>ME can act as initiator or responder.</description>
                <value>2</value>
            </enumMember>
        </enum>
        <enum name="TransportProtocolName">
            <description>Enumeration of well known transport protocols.</description>
            <enumMember name="TCP">
                <value>1</value>
            </enumMember>
            <enumMember name="UDP">
                <value>2</value>
            </enumMember>
            <enumMember name="SCTP">
                <value>3</value>
            </enumMember>
            <enumMember name="ICMP">
                <value>4</value>
            </enumMember>
        </enum>
        <enum name="IdentityOrigin">
            <description>Identity Origin </description>
            <enumMember name="SUBJECT">
                <value>0</value>
            </enumMember>
            <enumMember name="SUBJECT_ALT_NAME">
                <value>1</value>
            </enumMember>
        </enum>
        <derivedDataType name="PresharedKey">
            <description>Derived string used as presharedkey.
Install a preshared key for the IKEv2 session.
+The pre-shared key has to be either a valid hexadecimal number or an ASCII string.
+Regexp: ^(0x([0-9a-fA-F])+)$|^(([^0]|0($|[^x])).*)$

The installation of the pre-shared key is completed if the action is completed without error. Any error returned by the action indicates that the installation is not performed.
If both credential and trustCategory have valid references, then the preshared key is not used even if it is installed.
</description>
            <baseType>
                <string>
                    <lengthRange>
                        <min>1</min>
                        <max>130</max>
                    </lengthRange>
                    <stringLength>
                        <subrange>
                            <min>1</min>
                            <max>130</max>
                        </subrange>
                    </stringLength>
                    <validValues>^(0x([0-9a-fA-F])+)$|^(([^0]|0($|[^x])).*)$</validValues>
                </string>
            </baseType>
            <validationRules>
                <rule exceptionText="" format="posix_ere" name="Pattern Constraint">^(0x([0-9a-fA-F])+)$|^(([^0]|0($|[^x])).*)$</rule>
            </validationRules>
        </derivedDataType>
        <class name="Ikev2Session">
            <description>Ikev2Session is used to specify that IKEv2 should be used to negotiate SA’s for the tunnel. &#13;
&#13;
It contains parameters specific to the IKEv2 protocol.</description>
            <action name="installPreSharedKey">
                <description>Install a preshared key for the IKEv2 session.&#13;
&#13;
The installation of the pre-shared key is completed if the action is completed without error. Any error returned by the action indicates that the installation is not performed.&#13;
If both credential and trustCategory have valid references, then the preshared key is not used even if it is installed.</description>
                <domainExtension domain="CoreMW">
                    <extension name="admOpId" value="0"/>
                </domainExtension>
                <returnType>
                    <void/>
                </returnType>
                <parameter name="presharedKey">
                    <description>String used as presharedkey.</description>
                    <in/>
                    <dataType>
                        <derivedDataTypeRef name="PresharedKey">
                            <mimName>RtnIpsec</mimName>
                        </derivedDataTypeRef>
                    </dataType>
                </parameter>
            </action>
            <action name="restartIkeSa">
                <description>This will cause the node to delete the IKE SA and initiate the negotiation of a new IKE SA.</description>
                <domainExtension domain="CoreMW">
                    <extension name="admOpId" value="1"/>
                </domainExtension>
                <returnType>
                    <void/>
                </returnType>
            </action>
            <attribute name="localIdentityOrigin">
                <description>This attribute controls whether the local identity is derived from the subject field or the subjectAltName in the used IPsec node certificate.  This attribute is only relevant for certificate based authentication.</description>
                <restricted/>
                <dataType>
                    <enumRef name="IdentityOrigin">
                        <defaultValue>SUBJECT_ALT_NAME</defaultValue>
                        <mimName>RtnIpsec</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="ikev2SessionId">
                <description>Value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="ikev2PolicyProfile">
                <description>Reference to an IKE policy profile instance.</description>
                <mandatory/>
                <restricted/>
                <dataType>
                    <moRef name="Ikev2PolicyProfile">
                        <mimName>RtnIkev2PolicyProfile</mimName>
                    </moRef>
                </dataType>
            </attribute>
            <attribute name="operationalState">
                <description>Operational state of the IKEv2 session.&#13;
&#13;
It is disabled if it is not possible to establish an IKEv2 SA due to e.g. authentication problems.</description>
                <readOnly/>
                <dataType>
                    <enumRef name="OperState">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="userLabel">
                <description>Label for free use.</description>
                <isNillable/>
                <dataType>
                    <string>
                        <lengthRange>
                            <min>1</min>
                            <max>128</max>
                        </lengthRange>
                        <stringLength>
                            <subrange>
                                <min>1</min>
                                <max>128</max>
                            </subrange>
                        </stringLength>
                    </string>
                </dataType>
            </attribute>
        </class>
        <class name="IpsecTunnel">
            <description>Configuration and runtime information of an Ipsec tunnel between two end points.</description>
            <validationRules>
                <rule exceptionText="" format="ECIM_Schematron_1.0" name="SchematronIpsecTunnel">&lt;schema xmlns="http://purl.oclc.org/dsdl/schematron"&gt;
	&lt;pattern&gt; 
		&lt;rule&gt;
		&lt;assert test='((@localAddress/../../@routerId) eq (@remoteAddress/../@routerId))'&gt;&lt;value-of select="."/&gt; The local and remote addresses must belong to the same routing domain.&lt;/assert&gt; 
		&lt;/rule&gt;
	&lt;/pattern&gt;
&lt;/schema&gt;</rule>
            </validationRules>
            <root/>
            <attribute name="remoteAddress">
                <description>Tunnel remote end point external peer.&#13;
&#13;
Valid reference is PeerIpv4 in Transport Route fragement.</description>
                <mandatory/>
                <restricted/>
                <dataType>
                    <moRef name="ManagedObject">
                        <mimName>EcimCommon</mimName>
                    </moRef>
                </dataType>
                <dependencies>The local and remote address must have the same address family and belong to the same routing domain.</dependencies>
            </attribute>
            <attribute name="ipsecTunnelId">
                <description>Value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="localAddress">
                <description>Tunnel local endpoint assigned IP address.&#13;
&#13;
Valid reference is AddressIpv4 in L3 infra fragment.</description>
                <mandatory/>
                <restricted/>
                <dataType>
                    <moRef name="ManagedObject">
                        <mimName>EcimCommon</mimName>
                    </moRef>
                </dataType>
                <dependencies>The local and remote address must have the same address family and belong to the same routing domain.</dependencies>
            </attribute>
            <attribute name="userLabel">
                <description>Label for free use.</description>
                <isNillable/>
                <dataType>
                    <string>
                        <lengthRange>
                            <min>1</min>
                            <max>128</max>
                        </lengthRange>
                        <stringLength>
                            <subrange>
                                <min>1</min>
                                <max>128</max>
                            </subrange>
                        </stringLength>
                    </string>
                </dataType>
            </attribute>
            <attribute name="reservedBy">
                <description>Contains a list of MO instances that reserve this MO instance.</description>
                <readOnly/>
                <dataType>
                    <sequence>
                        <moRef name="ManagedObject">
                            <mimName>EcimCommon</mimName>
                        </moRef>
                        <minLength>0</minLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="operationalState">
                <description>The operational state.

The operationalState is disabled if the associated Ikev2Session is disabled.</description>
                <noNotification/>
                <readOnly/>
                <dataType>
                    <enumRef name="OperState">
                        <mimName>ECIM_CommonLibrary</mimName>
                    </enumRef>
                </dataType>
            </attribute>
            <attribute name="availabilityStatus">
                <description>The availability status.

It contains details about operationalState.
</description>
                <noNotification/>
                <readOnly/>
                <dataType>
                    <sequence>
                        <enumRef name="AvailStatus">
                            <mimName>ECIM_CommonLibrary</mimName>
                        </enumRef>
                        <minLength>0</minLength>
                    </sequence>
                </dataType>
            </attribute>
        </class>
        <class name="IpsecPolicy">
            <description>Holds configuration information for Ipsec policies.</description>
            <attribute name="ipsecPolicyId">
                <description>Value component of the RDN.&#13;
</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="ipsecProposalProfile">
                <description>Reference to an Ipsec proposal profile. </description>
                <mandatory/>
                <restricted/>
                <dataType>
                    <moRef name="IpsecProposalProfile">
                        <mimName>RtnIpsecProposalProfile</mimName>
                    </moRef>
                </dataType>
            </attribute>
            <attribute name="remoteTrafficSelector">
                <description>Ordered list of traffic selectors to be used for SA negotiation. &#13;
&#13;
If remoteTrafficSelector is not specified, it means wildcard(i.e. any possible IP address, protocol etc).&#13;&#13;
The first in the list has the highest priority.</description>
                <restricted/>
                <dataType>
                    <sequence>
                        <structRef name="TrafficSelector">
                            <mimName>RtnIpsec</mimName>
                        </structRef>
                        <minLength>0</minLength>
                        <maxLength>2</maxLength>
                        <nonUnique/>
                        <ordered/>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="antiReplayProtection">
                <description>Enable or disable anti replay protection.&#13;
&#13;
</description>
                <dataType>
                    <boolean>
                        <defaultValue>true</defaultValue>
                    </boolean>
                </dataType>
            </attribute>
            <attribute name="userLabel">
                <description>Label for free use.</description>
                <isNillable/>
                <dataType>
                    <string>
                        <lengthRange>
                            <min>1</min>
                            <max>128</max>
                        </lengthRange>
                        <stringLength>
                            <subrange>
                                <min>1</min>
                                <max>128</max>
                            </subrange>
                        </stringLength>
                    </string>
                </dataType>
            </attribute>
        </class>
        <relationship name="InterfaceIPv4_encapsulation_to_IpsecTunnel_reservedBy">
            <biDirectionalAssociation>
                <associationEnd name="encapsulation">
                    <hasClass name="IpsecTunnel">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                    <isReserving/>
                </associationEnd>
                <associationEnd name="reservedBy">
                    <hasClass name="InterfaceIPv4">
                        <mimName>RtnL3InterfaceIPv4</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </associationEnd>
            </biDirectionalAssociation>
        </relationship>
        <relationship name="IpsecTunnel_to_IpsecPolicy">
            <containment>
                <parent>
                    <hasClass name="IpsecTunnel">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="IpsecPolicy">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
        <relationship name="IpsecTunnel_to_Ikev2Session">
            <containment>
                <parent>
                    <hasClass name="IpsecTunnel">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Ikev2Session">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
        <relationship name="IpsecPolicy_ipsecProposalProfile_to_IpsecProposalProfile_reservedBy">
            <biDirectionalAssociation>
                <associationEnd name="ipsecProposalProfile">
                    <hasClass name="IpsecProposalProfile">
                        <mimName>RtnIpsecProposalProfile</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                    <isReserving/>
                </associationEnd>
                <associationEnd name="reservedBy">
                    <hasClass name="IpsecPolicy">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </associationEnd>
            </biDirectionalAssociation>
        </relationship>
        <relationship name="Ike2Session_ikev2PolicyProfile_to_Ikev2PolicyProfile_reservedBy">
            <biDirectionalAssociation>
                <associationEnd name="ikev2PolicyProfile">
                    <hasClass name="Ikev2PolicyProfile">
                        <mimName>RtnIkev2PolicyProfile</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                    <isReserving/>
                </associationEnd>
                <associationEnd name="reservedBy">
                    <hasClass name="Ikev2Session">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </associationEnd>
            </biDirectionalAssociation>
        </relationship>
        <relationship name="IpsecTunnel_remoteAddress_to_PeerIPv4_reservedBy">
            <biDirectionalAssociation>
                <associationEnd name="remoteAddress">
                    <hasClass name="PeerIPv4">
                        <mimName>RtnRoutesPeerIPv4</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                    <isReserving/>
                </associationEnd>
                <associationEnd name="reservedBy">
                    <hasClass name="IpsecTunnel">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </associationEnd>
            </biDirectionalAssociation>
        </relationship>
        <relationship name="IpsecTunnel_localAddress_to_AddressIPv4_reservedBy">
            <biDirectionalAssociation>
                <associationEnd name="localAddress">
                    <hasClass name="AddressIPv4">
                        <mimName>RtnL3InterfaceIPv4</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                    <isReserving/>
                </associationEnd>
                <associationEnd name="reservedBy">
                    <hasClass name="IpsecTunnel">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </associationEnd>
            </biDirectionalAssociation>
        </relationship>
    </mim>
    <mim author="EAB/FJP/TA UABERPE" contact="EAB/FJP/TA UABERPE" correction="0" date="" docNo="" name="RtnIkev2PolicyProfile" namespace="urn:com:ericsson:ecim:RtnIkev2PolicyProfile" namespacePrefix="rtnikev2policyprofile" organization="" release="2" revision="" variant="Model" version="1">
        <description>Ipsec Ikev2PolicyProfile package</description>
        <domainExtension domain="ECIM">
            <extension name="immNamespace" value="NONE"/>
        </domainExtension>
        <class name="Ikev2PolicyProfile">
            <description>Common information for multiple IKE sessions to be instantiated on a managed element.&#13;
&#13;
One or more Ikev2Session instances might refer to this instance.</description>
            <validationRules>
                <rule exceptionText="" format="ECIM_Schematron_1.0" name="Ikev2PolicyProfile">&lt;schema xmlns="http://purl.oclc.org/dsdl/schematron"&gt;
	&lt;pattern&gt;
		&lt;rule&gt; 
		&lt;assert test='every $ip in @ikev2Proposal satisfies (((exists($ip/@diffieHellmanGroup)) and (exists($ip/@pseudoRandomFunction)) and (exists($ip/@integrityAlgorithm)) and (exists($ip/@encryptionAlgorithm))) or ((not(exists($ip/@diffieHellmanGroup))) and (not(exists($ip/@pseudoRandomFunction))) and (not(exists($ip/@integrityAlgorithm))) and (not(exists($ip/@encryptionAlgorithm)))))'&gt;&lt;value-of select="."/&gt; None or all attributes of Ikev2Proposal must be present.&lt;/assert&gt;
		&lt;/rule&gt;
	&lt;/pattern&gt;
&lt;/schema&gt;</rule>
            </validationRules>
            <root/>
            <attribute name="ikev2PolicyProfileId">
                <description>The value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="credential">
                <description>Reference to the managed element own credential to be used in IKEv2 negotiation. &#13;
&#13;
Valid reference is NodeCredential in Certificate Management Branch.&#13;&#13;&#13;
If credential and trustCategory are not specified, then preshared key-based authentication is selected. The referring Ikev2Session instances must have preshared keys installed.</description>
                <restricted/>
                <isNillable/>
                <dataType>
                    <moRef name="NodeCredential">
                        <mimName>ECIM_CertM</mimName>
                    </moRef>
                </dataType>
            </attribute>
            <attribute name="trustCategory">
                <description>Reference to a  trusted certificates group.&#13;
&#13;
Valid reference is TrustCategory in Certificate Management Branch.&#13;&#13;&#13;
If credential and trustedCertificates are not specified, then pre-shared key based authentication is selected. The referring Ikev2Session instances have to have pre-shared keys installed.</description>
                <restricted/>
                <isNillable/>
                <dataType>
                    <moRef name="TrustCategory">
                        <mimName>ECIM_CertM</mimName>
                    </moRef>
                </dataType>
            </attribute>
            <attribute name="ikev2Proposal">
                <description>An ordered list of IKE proposals to be used for IKE SA negotiation.&#13;
&#13;
At least one IKE proposal must be specified. The first one in the list has the highest priority.</description>
                <mandatory/>
                <restricted/>
                <dataType>
                    <sequence>
                        <structRef name="Ikev2Proposal">
                            <mimName>RtnIpsec</mimName>
                        </structRef>
                        <minLength>1</minLength>
                        <maxLength>2</maxLength>
                        <nonUnique/>
                        <ordered/>
                    </sequence>
                </dataType>
                <dependencies>None or all attributes of Ikev2Proposal must be present.</dependencies>
            </attribute>
            <attribute name="ikeSaLifetime">
                <description>Lifetime for IKE SA. In order for the node to have completed the rekeying process before the lifetime expires, the node will initiate rekeying according to a soft lifetime. The soft lifetime is calculated as  (0.8+0.1*R)*ikeSaLifetime, where R is a random factor between 0 and 1. </description>
                <restricted/>
                <dataType>
                    <uint32>
                        <range>
                            <min>60</min>
                            <max>5000</max>
                        </range>
                        <ranges>
                            <subrange>
                                <min>60</min>
                                <max>5000</max>
                            </subrange>
                        </ranges>
                        <defaultValue>1440</defaultValue>
                        <unit>mins</unit>
                    </uint32>
                </dataType>
            </attribute>
            <attribute name="userLabel">
                <description>Label for free use.</description>
                <isNillable/>
                <dataType>
                    <string>
                        <lengthRange>
                            <min>1</min>
                            <max>128</max>
                        </lengthRange>
                        <stringLength>
                            <subrange>
                                <min>1</min>
                                <max>128</max>
                            </subrange>
                        </stringLength>
                    </string>
                </dataType>
            </attribute>
            <attribute name="dpdTime">
                <description>The maximum time  to detect that a IKE SA is down.  &#13;
&#13;
If the SA is down, an attempt is made to re-establish the SA.&#13;
If this attempt fails, an alarm is issued.</description>
                <restricted/>
                <dataType>
                    <uint32>
                        <range>
                            <min>30</min>
                            <max>1800</max>
                        </range>
                        <ranges>
                            <subrange>
                                <min>30</min>
                                <max>1800</max>
                            </subrange>
                        </ranges>
                        <defaultValue>60</defaultValue>
                        <unit>secs</unit>
                    </uint32>
                </dataType>
            </attribute>
            <attribute name="reservedBy">
                <description>Contains a list of MO instances that reserve this MO instance.</description>
                <readOnly/>
                <dataType>
                    <sequence>
                        <moRef name="ManagedObject">
                            <mimName>EcimCommon</mimName>
                        </moRef>
                        <minLength>0</minLength>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="ikeDscp">
                <description>The DSCP value that the node will use when transmitting IKE messages.</description>
                <restricted/>
                <dataType>
                    <uint8>
                        <range>
                            <min>0</min>
                            <max>63</max>
                        </range>
                        <ranges>
                            <subrange>
                                <min>0</min>
                                <max>63</max>
                            </subrange>
                        </ranges>
                        <defaultValue>48</defaultValue>
                    </uint8>
                </dataType>
            </attribute>
        </class>
        <relationship name="Ikev2PolicyProfile_credential_to_NodeCredential_reservedByUser">
            <biDirectionalAssociation>
                <associationEnd name="credential">
                    <hasClass name="NodeCredential">
                        <mimName>ECIM_CertM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                    <isReserving/>
                </associationEnd>
                <associationEnd name="reservedByUser">
                    <hasClass name="Ikev2PolicyProfile">
                        <mimName>RtnIkev2PolicyProfile</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </associationEnd>
            </biDirectionalAssociation>
        </relationship>
        <relationship name="Ikev2PolicyProfile_trustCategory_to_TrustCategory_reservedByUser">
            <biDirectionalAssociation>
                <associationEnd name="trustCategory">
                    <hasClass name="TrustCategory">
                        <mimName>ECIM_CertM</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                    <isReserving/>
                </associationEnd>
                <associationEnd name="reservedByUser">
                    <hasClass name="Ikev2PolicyProfile">
                        <mimName>RtnIkev2PolicyProfile</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                    </cardinality>
                </associationEnd>
            </biDirectionalAssociation>
        </relationship>
    </mim>
    <mim author="EAB/FJP/TA UABERPE" contact="EAB/FJP/TA UABERPE" correction="0" date="" docNo="" name="RtnIpsecProposalProfile" namespace="urn:com:ericsson:ecim:RtnIpsecProposalProfile" namespacePrefix="rtnipsecproposalprofile" organization="" release="1" revision="" variant="Model" version="1">
        <description>IpSecProposalProfile package</description>
        <domainExtension domain="ECIM">
            <extension name="immNamespace" value="NONE"/>
        </domainExtension>
        <class name="IpsecProposalProfile">
            <description>Configuration information for Ipsec policies.</description>
            <validationRules>
                <rule exceptionText="" format="ECIM_Schematron_1.0" name="ProposalProfile">&lt;schema xmlns="http://purl.oclc.org/dsdl/schematron"&gt;
	&lt;pattern&gt; 
		&lt;rule&gt;
		&lt;assert test='every $ip in @ipsecProposal satisfies not (exists($ip/@encryptionAlgorithm) xor exists($ip/@integrityAlgorithm))'&gt;&lt;value-of select="."/&gt; None or both attributes of IpsecProposal must be present.&lt;/assert&gt; 
		&lt;/rule&gt;
	&lt;/pattern&gt;
&lt;/schema&gt; </rule>
            </validationRules>
            <root/>
            <attribute name="ipsecProposalProfileId">
                <description>Value component of the RDN.</description>
                <mandatory/>
                <noNotification/>
                <restricted/>
                <key/>
                <dataType>
                    <string/>
                </dataType>
            </attribute>
            <attribute name="childSaLifetime">
                <description>Lifetime for the negotiated ChildSAs. 
In order for the node to have completed the rekeying process before the lifetime expires, the node will initiate re-rekeying according to a soft lifetime. The soft lifetime is calculated as (0.8+0.1*R)*childSaLifetime, where R is a random factor between 0 and 1. </description>
                <mandatory/>
                <restricted/>
                <dataType>
                    <structRef name="ChildSaLifetime">
                        <mimName>RtnIpsec</mimName>
                    </structRef>
                </dataType>
            </attribute>
            <attribute name="ipsecProposal">
                <description>An ordered list of Ipsec proposals to be used for IKEv2 negotiation. 

At least one Ipsec proposal must be specified. The first one in the list has the highest priority.&#13;
</description>
                <mandatory/>
                <restricted/>
                <dataType>
                    <sequence>
                        <structRef name="IpsecProposal">
                            <mimName>RtnIpsec</mimName>
                        </structRef>
                        <minLength>1</minLength>
                        <maxLength>2</maxLength>
                        <nonUnique/>
                        <ordered/>
                    </sequence>
                </dataType>
            </attribute>
            <attribute name="userLabel">
                <description>Label for free use.</description>
                <isNillable/>
                <dataType>
                    <string>
                        <lengthRange>
                            <min>1</min>
                            <max>128</max>
                        </lengthRange>
                        <stringLength>
                            <subrange>
                                <min>1</min>
                                <max>128</max>
                            </subrange>
                        </stringLength>
                    </string>
                </dataType>
            </attribute>
            <attribute name="reservedBy">
                <description>Contains a list of MO instances that reserve this MO instance.</description>
                <readOnly/>
                <dataType>
                    <sequence>
                        <moRef name="ManagedObject">
                            <mimName>EcimCommon</mimName>
                        </moRef>
                        <minLength>0</minLength>
                    </sequence>
                </dataType>
            </attribute>
        </class>
    </mim>
    <mim author="EAB/FJP/TA UABERPE" contact="EAB/FJP/TA UABERPE" correction="0" date="" docNo="" name="RtnIpsec_" namespace="urn:com:ericsson:ecim:RtnIpsec_" namespacePrefix="rtnipsec_" organization="" release="0" revision="" variant="Model" version="0">
        <description>Decision MOM for SCTP.

Shall not be visible.</description>
        <domainExtension domain="ECIM">
            <extension name="immNamespace" value="MOM_NAME"/>
        </domainExtension>
    </mim>
    <mim name="EcimCommon" release="0" version="1">
        <class name="ManagedObject">
            <description>The ManagedObject MO represents a generic MO type. It does not represent any real resource in the system and can therefore not be instanciated. It is used as a MO-reference that can refer to multiple MO types.</description>
            <interfaceOnly/>
        </class>
    </mim>
    <interMim>
        <relationship name="Router_to_IpsecTunnel">
            <domainExtension domain="CoreMW">
                <extension name="splitImmDn" value="false"/>
            </domainExtension>
            <containment>
                <parent>
                    <hasClass name="Router">
                        <mimName>RtnL3Router</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="IpsecTunnel">
                        <mimName>RtnIpsec</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
    </interMim>
    <interMim>
        <relationship name="Transport_to_Ikev2PolicyProfile">
            <domainExtension domain="CoreMW">
                <extension name="splitImmDn" value="false"/>
            </domainExtension>
            <containment>
                <parent>
                    <hasClass name="Transport">
                        <mimName>ECIM_Top</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="Ikev2PolicyProfile">
                        <mimName>RtnIkev2PolicyProfile</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
    </interMim>
    <interMim>
        <relationship name="Transport_to_IpsecProposalProfile">
            <domainExtension domain="CoreMW">
                <extension name="splitImmDn" value="false"/>
            </domainExtension>
            <containment>
                <parent>
                    <hasClass name="Transport">
                        <mimName>ECIM_Top</mimName>
                    </hasClass>
                </parent>
                <child>
                    <hasClass name="IpsecProposalProfile">
                        <mimName>RtnIpsecProposalProfile</mimName>
                    </hasClass>
                    <cardinality>
                        <min>0</min>
                        <max>1</max>
                    </cardinality>
                </child>
                <domainExtension domain="ECIM">
                    <extension name="canCreate" value="true"/>
                    <extension name="canDelete" value="true"/>
                </domainExtension>
            </containment>
        </relationship>
    </interMim>
    <mib correction="0" name="RtnIpsecIpsecTunnelPM" release="1" version="1">
        <object parentDn="Pm=1,PmGroup=IpsecTunnel">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementTypeId">
                <value>ikeTunInInvalidSpi</value>
            </slot>
            <slot name="measurementName">
                <value>ikeTunInInvalidSpi</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
            <slot name="description">
                <value>The number of incoming IKE messages that have been discarded because the SPI value was unknown.</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
        </object>
        <object parentDn="">
            <hasClass name="Pm">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="pmId">
                <value>1</value>
            </slot>
        </object>
        <object parentDn="Pm=1,PmGroup=IpsecTunnel">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementTypeId">
                <value>espTunInInvalidSpi</value>
            </slot>
            <slot name="measurementName">
                <value>espTunInInvalidSpi</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="description">
                <value>The number of incoming ESP packets that have been discarded because the SPI value was unknown.</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
        </object>
        <object parentDn="Pm=1">
            <hasClass name="PmGroup">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="pmGroupId">
                <value>IpsecTunnel</value>
            </slot>
            <slot name="moClass">
                <complexValue>
                    <slot name="moClassName">
                        <value>IpsecTunnel</value>
                    </slot>
                    <slot name="mimVersion">
                        <value>0</value>
                    </slot>
                    <slot name="mimRelease">
                        <value>1</value>
                    </slot>
                    <slot name="mimName">
                        <value>RtnIpsec</value>
                    </slot>
                </complexValue>
            </slot>
            <slot name="validity">
                <value>true</value>
            </slot>
            <slot name="description">
                <value>Statistics for IpsecTunnel</value>
            </slot>
        </object>
    </mib>
    <mib correction="0" name="RtnIpsecIpsecPolicyPM" release="1" version="1">
        <object parentDn="">
            <hasClass name="Pm">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="pmId">
                <value>1</value>
            </slot>
        </object>
        <object parentDn="Pm=1,PmGroup=IpsecPolicy">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementTypeId">
                <value>espTunOutNoSA</value>
            </slot>
            <slot name="measurementName">
                <value>espTunOutNoSA</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="description">
                <value>Number outgoing packets that have been discarded because there is no child SA established with a traffic selector matching the packet.</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
        </object>
        <object parentDn="Pm=1,PmGroup=IpsecPolicy">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementTypeId">
                <value>espTunInReplayFail</value>
            </slot>
            <slot name="measurementName">
                <value>espTunInReplayFail</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
            <slot name="description">
                <value>The number of incoming ESP packets that have been discarded due to that they failed the antireplay check</value>
            </slot>
        </object>
        <object parentDn="Pm=1">
            <hasClass name="PmGroup">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="pmGroupId">
                <value>IpsecPolicy</value>
            </slot>
            <slot name="moClass">
                <complexValue>
                    <slot name="moClassName">
                        <value>IpsecPolicy</value>
                    </slot>
                    <slot name="mimVersion">
                        <value>0</value>
                    </slot>
                    <slot name="mimRelease">
                        <value>1</value>
                    </slot>
                    <slot name="mimName">
                        <value>RtnIpsec</value>
                    </slot>
                </complexValue>
            </slot>
            <slot name="validity">
                <value>true</value>
            </slot>
            <slot name="description">
                <value>Statistics for IpsecPolicy</value>
            </slot>
        </object>
        <object parentDn="Pm=1,PmGroup=IpsecPolicy">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementTypeId">
                <value>espTunInIntegrityFail</value>
            </slot>
            <slot name="measurementName">
                <value>espTunInIntegrityFail</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
            <slot name="description">
                <value>The number of incoming ESP packets that have been discarded because they failed the integrity check.</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
        </object>
    </mib>
    <mib correction="2" name="RtnIpsecIkev2SessionPM" release="1" version="1">
        <object parentDn="Pm=1,PmGroup=Ikev2Session">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementTypeId">
                <value>ikeTunInIntegrityFail</value>
            </slot>
            <slot name="measurementName">
                <value>ikeTunInIntegrityFail</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
            <slot name="description">
                <value>The number of incoming IKE messages that have been discarded due to that they failed the integrity check.</value>
            </slot>
        </object>
        <object parentDn="">
            <hasClass name="Pm">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="pmId">
                <value>1</value>
            </slot>
        </object>
        <object parentDn="Pm=1,PmGroup=Ikev2Session">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementName">
                <value>ikeTunInInvalidMsg</value>
            </slot>
            <slot name="measurementTypeId">
                <value>ikeTunInInvalidMsg</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="description">
                <value>The number of incoming IKE messages that have been discarded because the message is invalid.</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
        </object>
        <object parentDn="Pm=1">
            <hasClass name="PmGroup">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="pmGroupId">
                <value>Ikev2Session</value>
            </slot>
            <slot name="description">
                <value>Statistics for Ikev2Session</value>
            </slot>
            <slot name="moClass">
                <complexValue>
                    <slot name="mimRelease">
                        <value>1</value>
                    </slot>
                    <slot name="mimVersion">
                        <value>0</value>
                    </slot>
                    <slot name="moClassName">
                        <value>Ikev2Session</value>
                    </slot>
                    <slot name="mimName">
                        <value>RtnIpsec</value>
                    </slot>
                </complexValue>
            </slot>
            <slot name="validity">
                <value>true</value>
            </slot>
        </object>
        <object parentDn="Pm=1,PmGroup=Ikev2Session">
            <hasClass name="MeasurementType">
                <mimName>ECIM_PM</mimName>
            </hasClass>
            <slot name="measurementTypeId">
                <value>ikeTunChildSaRekey</value>
            </slot>
            <slot name="measurementName">
                <value>ikeTunChildSaRekey</value>
            </slot>
            <slot name="size">
                <value>8</value>
            </slot>
            <slot name="collectionMethod">
                <value>CC</value>
            </slot>
            <slot name="description">
                <value>The number of successful child SA rekeyings.</value>
            </slot>
            <slot name="aggregation">
                <value>SUM</value>
            </slot>
            <slot name="measurementStatus">
                <value>USED</value>
            </slot>
            <slot name="multiplicity">
                <value>1</value>
            </slot>
            <slot name="initialValue">
                <value>0</value>
            </slot>
            <slot name="resetAtGranPeriod">
                <value>true</value>
            </slot>
        </object>
    </mib>
</models>
